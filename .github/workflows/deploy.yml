name: Pasttival-Backend of Deploy to Production
on:
  push:
    branches:
      - 12/refactor/CI-CD-settings-deploy.yml  # main에 푸시될 때 실행

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 체크아웃 코드
        uses: actions/checkout@v3

      - name: JDK-17 설치
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: gradlew 실행 권한 부여, Gradle 빌드
        working-directory: backend
        run: | 
          chmod +x gradlew
          ./gradlew build -x test

      - name: Docker Hub 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 빌드 및 Docker 이미지 푸시
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/passtival-spring:latest ./backend
          docker push ${{ secrets.DOCKER_USERNAME }}/passtival-spring:latest

      - name: SCP를 통해 서버에 파일 복사, docker-compose.prod.yml
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "backend/docker-compose.prod.yml" # GitHub 저장소 내 경로
          target: "~/deploy" # EC2 서버의 목적지 주소



      - name: SSH를 통해 서버에 배포
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd ~/deploy/backend
            docker compose -f docker-compose.prod.yml down
            docker pull ${{ secrets.DOCKER_USERNAME }}/passtival-spring:latest
            docker compose -f docker-compose.prod.yml up -d