# docker-compose.prod.yml
services:
  backend:
    image: ${DOCKER_USERNAME}/passtival-spring:latest
    container_name: passtival-spring-app
    ports:
      - "127.0.0.1:8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - DB_URL=${DB_URL}
      - KAKAO_REST_API_KEY=${KAKAO_REST_API_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ACCESS_EXPIRATION=${JWT_ACCESS_EXPIRATION}
      - JWT_REFRESH_EXPIRATION=${JWT_REFRESH_EXPIRATION}
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - SWAGGER_SERVER_URL=${SWAGGER_SERVER_URL}
      - DISCORD_WEBHOOK_URL=${DISCORD_WEBHOOK_URL}
      - ADMIN_USERNAME=${ADMIN_USERNAME}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - ADMIN_SEED_KEY=${ADMIN_SEED_KEY}
      - KAKAO_CLIENT_NAME=${KAKAO_CLIENT_NAME}
      - KAKAO_CLIENT_ID=${KAKAO_CLIENT_ID}
      - KAKAO_CLIENT_SECRET=${KAKAO_CLIENT_SECRET}
      - KAKAO_REDIRECT_URI=${KAKAO_REDIRECT_URI}
      - KAKAO_AUTHORIZATION_GRANT_TYPE=${KAKAO_AUTHORIZATION_GRANT_TYPE}
      - KAKAO_SCOPE=${KAKAO_SCOPE}
      - KAKAO_AUTHORIZATION_URI=${KAKAO_AUTHORIZATION_URI}
      - KAKAO_TOKEN_URI=${KAKAO_TOKEN_URI}
      - KAKAO_USER_INFO_URI=${KAKAO_USER_INFO_URI}
      - KAKAO_USER_NAME_ATTRIBUTE=${KAKAO_USER_NAME_ATTRIBUTE}
      - FRONTEND_LOGIN_URL=${FRONTEND_LOGIN_URL}
      - FRONTEND_LOGIN_FAIL_URL=${FRONTEND_LOGIN_FAIL_URL}
    networks:
      - backend
    volumes:
      - /home/ubuntu/deploy/backend:/app/deploy

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - /home/ubuntu/monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - /home/ubuntu/monitoring/prometheus/rules.yml:/etc/prometheus/rules.yml:ro
      - prom_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - backend
    restart: unless-stopped
    depends_on:
      - backend

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USERNAME}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_AUTH_ANONYMOUS_ENABLED=false

    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - backend
    restart: unless-stopped
    depends_on:
      - prometheus

volumes:
  prom_data:
  grafana_data:

networks:
  backend: